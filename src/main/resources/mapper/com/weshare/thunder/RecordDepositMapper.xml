<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weshare.thunder.dao.RecordDepositMapper">
  <resultMap id="BaseResultMap" type="com.weshare.thunder.model.RecordDeposit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gid" jdbcType="CHAR" property="gid" />
    <result column="user_gid" jdbcType="CHAR" property="userGid" />
    <result column="trans_deduction_gid" jdbcType="CHAR" property="transDeductionGid" />
    <result column="deduct_card_gid" jdbcType="CHAR" property="deductCardGid" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="deposit_period" jdbcType="INTEGER" property="depositPeriod" />
    <result column="deposit_rate" jdbcType="DECIMAL" property="depositRate" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="amount_initial" jdbcType="DECIMAL" property="amountInitial" />
    <result column="amount_deposit" jdbcType="DECIMAL" property="amountDeposit" />
    <result column="deposit_state" jdbcType="TINYINT" property="depositState" />
    <result column="deposit_src" jdbcType="TINYINT" property="depositSrc" />
    <result column="deposit_type" jdbcType="TINYINT" property="depositType" />
    <result column="end_time" jdbcType="INTEGER" property="endTime" />
    <result column="real_earning" jdbcType="DECIMAL" property="realEarning" />
    <result column="left_earning" jdbcType="DECIMAL" property="leftEarning" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="order_id" jdbcType="CHAR" property="orderId" />
  </resultMap>
  <resultMap id="CountMap" type="com.weshare.thunder.model.UserCount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="count" jdbcType="INTEGER" property="count" />
    <result column="user_gid" jdbcType="CHAR" property="userGid" />
  </resultMap>
  <resultMap id="FundTransDeductionMap" type="com.weshare.thunder.model.ReFundTransDeduction">
    <id column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <resultMap id="FixTermTransDeductionMap" type="com.weshare.thunder.model.ReFixTermTransDeduction">
      <id column="amount" jdbcType="DECIMAL" property="amount" />
      <id column="product_id" jdbcType="INTEGER" property="productId" />
  </resultMap>
  <resultMap id="BigUserFundMap" type="com.weshare.thunder.model.ReBigUserFund">
      <id column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <resultMap id="BigUserFixMap" type="com.weshare.thunder.model.ReBigUserFix">
      <id column="amount" jdbcType="DECIMAL" property="amount" />
      <id column="product_id" jdbcType="INTEGER" property="productId" />
  </resultMap>
  <resultMap id="FundToFixMap" type="com.weshare.thunder.model.ReFundToFix">
      <id column="product_id" jdbcType="INTEGER" property="productId" />
      <id column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <resultMap id="FixToFundMap" type="com.weshare.thunder.model.ReFixToFund">
      <id column="product_id" jdbcType="INTEGER" property="productId" />
      <id column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <resultMap id="MigrateMap" type="com.weshare.thunder.model.ReMigrate">
      <id column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <resultMap id="TransWithdrawMap" type="com.weshare.thunder.model.ReTransWithdraw">
      <id column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <resultMap id="TransInitAmountMap" type="com.weshare.thunder.model.ReTransInitAmount">
    <id column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, gid, user_gid, trans_deduction_gid, deduct_card_gid, create_time, update_time, 
    deposit_period, deposit_rate, product_id, amount_initial, amount_deposit, deposit_state, 
    deposit_src, deposit_type, end_time, real_earning, left_earning, fail_reason, order_id
  </sql>
  <sql id="User_Count_List">
    count(*) as "count",user_gid,id
  </sql>
  <select id="selectFundTransDeductionByUpdateTime" resultMap="FundTransDeductionMap">
    SELECT
      SUM(trans_deduction.deduct_amount) AS "amount"
    FROM
      trans_deduction
      INNER JOIN record_deposit ON record_deposit.gid = trans_deduction.record_gid
    WHERE
      trans_deduction.deduct_state = 1
      AND
      record_deposit.product_id = 1
      AND
      trans_deduction.update_time BETWEEN ${startTime} AND ${endTime};
  </select>
  <select id="selectFixTermTransDeductionByUpdateTime" resultMap="FixTermTransDeductionMap">
    SELECT
      SUM(trans_deduction.deduct_amount) AS "amount",
      record_deposit.product_id     AS "product_id"
    FROM
      trans_deduction
      INNER JOIN record_deposit ON record_deposit.gid = trans_deduction.record_gid
    WHERE
      trans_deduction.deduct_state = 1
      AND
      record_deposit.product_id != 1
      AND
      trans_deduction.update_time BETWEEN ${startTime} AND ${endTime}
    GROUP BY record_deposit.product_id;
  </select>
  <select id="selectTransWithdrawByUpdateTime" resultMap="TransWithdrawMap">
    select
      SUM(withdraw_amount) as "amount"
    from
      trans_withdraw
    where
      withdraw_state = 1
      and
      update_time between ${startTime} and ${endTime};
  </select>
  <select id="selectBigUserFundByCreateTime" resultMap="BigUserFundMap">
    SELECT
      SUM(amount_initial) AS "amount"
    FROM
      record_deposit
    WHERE
      deposit_type = 3
      AND
      product_id = 1
      AND
      deposit_state IN (1, 2)
      AND create_time BETWEEN ${startTime} AND ${endTime};
  </select>
  <select id="selectBigUserFixByCreateTime" resultMap="BigUserFixMap">
    SELECT
      product_id     AS "product_id",
      SUM(amount_initial) AS "amount"
    FROM
      record_deposit
    WHERE
      deposit_type = 3
      AND
      product_id != 1
      AND
      deposit_state IN (1, 2)
      AND create_time BETWEEN ${startTime} AND ${endTime}
    GROUP BY product_id;
  </select>
  <select id="selectMigrateByCreateTime" resultMap="MigrateMap">
    SELECT
      SUM(amount_initial) AS "amount"
    FROM
      record_deposit
    WHERE
      deposit_state IN (1, 2)
      AND
      deposit_type = 1
      AND
      product_id = 1
      AND create_time BETWEEN  ${startTime} AND ${endTime};
  </select>
  <select id="selectFundToFixByCreateTime" resultMap="FundToFixMap">
    SELECT
      product_id     AS "product_id",
      SUM(amount_initial) AS "amount"
    FROM
      record_deposit
    WHERE
      deposit_src = 1
      AND
      deposit_state in (1, 2)
      AND create_time BETWEEN ${startTime} AND ${endTime}
    GROUP BY product_id;
  </select>
  <select id="selectFixToFundByUpdateTime" resultMap="FixToFundMap">
    SELECT
      product_id AS "product_id",
      SUM(amount_initial) AS "amount"
    FROM
      record_deposit
    WHERE
      deposit_state = 2
      AND
      update_time BETWEEN ${startTime} AND ${endTime}
    GROUP BY product_id;
  </select>
  <select id="selectByExample" parameterType="com.weshare.thunder.model.RecordDepositExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record_deposit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from record_deposit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from record_deposit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.weshare.thunder.model.RecordDepositExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from record_deposit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.weshare.thunder.model.RecordDeposit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into record_deposit (id, gid, user_gid, trans_deduction_gid, 
      deduct_card_gid, create_time, update_time, 
      deposit_period, deposit_rate, product_id, 
      amount_initial, amount_deposit, deposit_state, 
      deposit_src, deposit_type, end_time, 
      real_earning, left_earning, fail_reason, 
      order_id)
    values (#{id,jdbcType=INTEGER}, #{gid,jdbcType=CHAR}, #{userGid,jdbcType=CHAR}, #{transDeductionGid,jdbcType=CHAR}, 
      #{deductCardGid,jdbcType=CHAR}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{depositPeriod,jdbcType=INTEGER}, #{depositRate,jdbcType=DECIMAL}, #{productId,jdbcType=INTEGER}, 
      #{amountInitial,jdbcType=DECIMAL}, #{amountDeposit,jdbcType=DECIMAL}, #{depositState,jdbcType=TINYINT}, 
      #{depositSrc,jdbcType=TINYINT}, #{depositType,jdbcType=TINYINT}, #{endTime,jdbcType=INTEGER}, 
      #{realEarning,jdbcType=DECIMAL}, #{leftEarning,jdbcType=DECIMAL}, #{failReason,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.weshare.thunder.model.RecordDeposit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into record_deposit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gid != null">
        gid,
      </if>
      <if test="userGid != null">
        user_gid,
      </if>
      <if test="transDeductionGid != null">
        trans_deduction_gid,
      </if>
      <if test="deductCardGid != null">
        deduct_card_gid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="depositPeriod != null">
        deposit_period,
      </if>
      <if test="depositRate != null">
        deposit_rate,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="amountInitial != null">
        amount_initial,
      </if>
      <if test="amountDeposit != null">
        amount_deposit,
      </if>
      <if test="depositState != null">
        deposit_state,
      </if>
      <if test="depositSrc != null">
        deposit_src,
      </if>
      <if test="depositType != null">
        deposit_type,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="realEarning != null">
        real_earning,
      </if>
      <if test="leftEarning != null">
        left_earning,
      </if>
      <if test="failReason != null">
        fail_reason,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=CHAR},
      </if>
      <if test="userGid != null">
        #{userGid,jdbcType=CHAR},
      </if>
      <if test="transDeductionGid != null">
        #{transDeductionGid,jdbcType=CHAR},
      </if>
      <if test="deductCardGid != null">
        #{deductCardGid,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="depositPeriod != null">
        #{depositPeriod,jdbcType=INTEGER},
      </if>
      <if test="depositRate != null">
        #{depositRate,jdbcType=DECIMAL},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="amountInitial != null">
        #{amountInitial,jdbcType=DECIMAL},
      </if>
      <if test="amountDeposit != null">
        #{amountDeposit,jdbcType=DECIMAL},
      </if>
      <if test="depositState != null">
        #{depositState,jdbcType=TINYINT},
      </if>
      <if test="depositSrc != null">
        #{depositSrc,jdbcType=TINYINT},
      </if>
      <if test="depositType != null">
        #{depositType,jdbcType=TINYINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="realEarning != null">
        #{realEarning,jdbcType=DECIMAL},
      </if>
      <if test="leftEarning != null">
        #{leftEarning,jdbcType=DECIMAL},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.weshare.thunder.model.RecordDepositExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from record_deposit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update record_deposit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=CHAR},
      </if>
      <if test="record.userGid != null">
        user_gid = #{record.userGid,jdbcType=CHAR},
      </if>
      <if test="record.transDeductionGid != null">
        trans_deduction_gid = #{record.transDeductionGid,jdbcType=CHAR},
      </if>
      <if test="record.deductCardGid != null">
        deduct_card_gid = #{record.deductCardGid,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.depositPeriod != null">
        deposit_period = #{record.depositPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.depositRate != null">
        deposit_rate = #{record.depositRate,jdbcType=DECIMAL},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.amountInitial != null">
        amount_initial = #{record.amountInitial,jdbcType=DECIMAL},
      </if>
      <if test="record.amountDeposit != null">
        amount_deposit = #{record.amountDeposit,jdbcType=DECIMAL},
      </if>
      <if test="record.depositState != null">
        deposit_state = #{record.depositState,jdbcType=TINYINT},
      </if>
      <if test="record.depositSrc != null">
        deposit_src = #{record.depositSrc,jdbcType=TINYINT},
      </if>
      <if test="record.depositType != null">
        deposit_type = #{record.depositType,jdbcType=TINYINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=INTEGER},
      </if>
      <if test="record.realEarning != null">
        real_earning = #{record.realEarning,jdbcType=DECIMAL},
      </if>
      <if test="record.leftEarning != null">
        left_earning = #{record.leftEarning,jdbcType=DECIMAL},
      </if>
      <if test="record.failReason != null">
        fail_reason = #{record.failReason,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update record_deposit
    set id = #{record.id,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=CHAR},
      user_gid = #{record.userGid,jdbcType=CHAR},
      trans_deduction_gid = #{record.transDeductionGid,jdbcType=CHAR},
      deduct_card_gid = #{record.deductCardGid,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      deposit_period = #{record.depositPeriod,jdbcType=INTEGER},
      deposit_rate = #{record.depositRate,jdbcType=DECIMAL},
      product_id = #{record.productId,jdbcType=INTEGER},
      amount_initial = #{record.amountInitial,jdbcType=DECIMAL},
      amount_deposit = #{record.amountDeposit,jdbcType=DECIMAL},
      deposit_state = #{record.depositState,jdbcType=TINYINT},
      deposit_src = #{record.depositSrc,jdbcType=TINYINT},
      deposit_type = #{record.depositType,jdbcType=TINYINT},
      end_time = #{record.endTime,jdbcType=INTEGER},
      real_earning = #{record.realEarning,jdbcType=DECIMAL},
      left_earning = #{record.leftEarning,jdbcType=DECIMAL},
      fail_reason = #{record.failReason,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.weshare.thunder.model.RecordDeposit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update record_deposit
    <set>
      <if test="gid != null">
        gid = #{gid,jdbcType=CHAR},
      </if>
      <if test="userGid != null">
        user_gid = #{userGid,jdbcType=CHAR},
      </if>
      <if test="transDeductionGid != null">
        trans_deduction_gid = #{transDeductionGid,jdbcType=CHAR},
      </if>
      <if test="deductCardGid != null">
        deduct_card_gid = #{deductCardGid,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="depositPeriod != null">
        deposit_period = #{depositPeriod,jdbcType=INTEGER},
      </if>
      <if test="depositRate != null">
        deposit_rate = #{depositRate,jdbcType=DECIMAL},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="amountInitial != null">
        amount_initial = #{amountInitial,jdbcType=DECIMAL},
      </if>
      <if test="amountDeposit != null">
        amount_deposit = #{amountDeposit,jdbcType=DECIMAL},
      </if>
      <if test="depositState != null">
        deposit_state = #{depositState,jdbcType=TINYINT},
      </if>
      <if test="depositSrc != null">
        deposit_src = #{depositSrc,jdbcType=TINYINT},
      </if>
      <if test="depositType != null">
        deposit_type = #{depositType,jdbcType=TINYINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="realEarning != null">
        real_earning = #{realEarning,jdbcType=DECIMAL},
      </if>
      <if test="leftEarning != null">
        left_earning = #{leftEarning,jdbcType=DECIMAL},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.weshare.thunder.model.RecordDeposit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update record_deposit
    set gid = #{gid,jdbcType=CHAR},
      user_gid = #{userGid,jdbcType=CHAR},
      trans_deduction_gid = #{transDeductionGid,jdbcType=CHAR},
      deduct_card_gid = #{deductCardGid,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      deposit_period = #{depositPeriod,jdbcType=INTEGER},
      deposit_rate = #{depositRate,jdbcType=DECIMAL},
      product_id = #{productId,jdbcType=INTEGER},
      amount_initial = #{amountInitial,jdbcType=DECIMAL},
      amount_deposit = #{amountDeposit,jdbcType=DECIMAL},
      deposit_state = #{depositState,jdbcType=TINYINT},
      deposit_src = #{depositSrc,jdbcType=TINYINT},
      deposit_type = #{depositType,jdbcType=TINYINT},
      end_time = #{endTime,jdbcType=INTEGER},
      real_earning = #{realEarning,jdbcType=DECIMAL},
      left_earning = #{leftEarning,jdbcType=DECIMAL},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--Customer Definition-->
  <select id="selectByGid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from record_deposit
    where gid = #{gid,jdbcType=CHAR}
  </select>

  <!-- Customer Functions-->
  <select id="selectByExampleLimit" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record_deposit
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>

  <select id="selectCountUserByExample" parameterType="com.weshare.thunder.model.RecordDepositExample"
          resultMap="CountMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="User_Count_List" />
    from record_deposit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    group by user_gid
  </select>

  <select id="selectTransInitAmount" resultMap="TransInitAmountMap">
    select
      SUM(amount_initial) as "amount"
    from
      record_deposit
    where
      deposit_state in (1,2)
    and
      create_time BETWEEN ${startTime} AND ${endTime};
  </select>

</mapper>